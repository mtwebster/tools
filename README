Github configuration of individual repositories for Android development

Borrowed and modified from:

http://blog.mhartl.com/2008/10/14/setting-up-your-git-repositories-for-open-source-projects-at-github/
___________________________________________
Download this and run: 

chmod a+x gitsetup

to make it executable.  Ideally you put this in a folder that is in your path so you can run it from any folder.

Requirements:
1. Repo tool-based initial setup
2. Fork of desired repository (i.e. frameworks_base, phone, etc..)
3. Configured git installation
4. Be in top-level folder of the repository you want to configure (i.e. for Phone app, ~/<my_project>/packages/apps/Phone)

Usage:
gitsetup [tracking branch] [new branch] [git@ address for your fork]
___________________________________________

This script will setup your git config (for a particular individual repository)
to simplify modifying code and pushing it to your personal fork of that repository
It will:

Setup to track changes to [tracking branch]
Create a new branch named [new branch] based off the tracking branch
Check out that new branch
Push an initial commit to your github to create that branch, at the specified git@ address
Set up an alias for interacting with that fork, defined by MY_REMOTE below

The resulting configuration will allow you to perform such things as:

- Allow you to repo sync your entire project (without having to worry about how your individual changes will be affected.
- Pull and push from your Github simply by entering git push <my_remote> <branch>

Common things I do once I've set up the git config on a particular repository I'm working on:

- (following a git commit) git push <myremote> <mybranch> ............ Pushes latest commit(s) to Github

- git pull --rebase github <tracking branch>.....Re-sync my local copy of the tracking branch, then apply my commits
  to the end (this keeps the commit history clean, so when it's time to do a pull request, there aren't a bunch m
  merges clouding things up.  This is what the repo tool runs on each repository when you do 'repo sync.'  By the way,
  the 'github' in that command is the name the repo tool assigns to the "upstream" address of "git://github.com/"

- (following a git commit) git push --force <myremote> <mybranch>..... resets my Github branch with my local branch, 
  FORCING the local history - basically overwrites the Github copy with my local copy.  WARNING - you will lose any 
  history on your Github that isn't also in your local branch.  This is generally considered bad form, but I do it 
  before issuing a Pull Request, as I tend to use Github as a "backup" tool, and when I'm all done with stuff, I'd 
  rather have all my changes in a single commit.
_______________________________________________

************ One configuration option to make (optional) ****************

At the beginning of the script (after the introductory comments):

MY_REMOTE="mygit"

Enter a simple name to make pushing/pulling easier.  This will NOT be seen publicly.
It simply replaces having to enter git@github.com:<you>/<yourfork> every time you want to interact
with your fork.  Instead you can just enter 'git push mygit <myfork>' and so on.

